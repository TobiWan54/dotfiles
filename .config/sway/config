include /etc/sway/config.d/*
include catppuccin-mocha

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu "rofi -theme drun.rasi -show drun -show-icons | xargs swaymsg exec --"

# Other variables
set $opacity 0.95

### Appearance
# window corner radius in px
corner_radius 10
gaps inner 5
gaps outer 5
default_border pixel 2
for_window [app_id=".*"] border pixel 2

# target                 title     bg    text   indicator  border
client.focused           $lavender $base $text  $rosewater $lavender
client.focused_inactive  $overlay0 $base $text  $rosewater $overlay0
client.unfocused         $overlay0 $base $text  $rosewater $overlay0
client.urgent            $peach    $base $peach $overlay0  $peach
client.placeholder       $overlay0 $base $text  $overlay0  $overlay0
client.background        $base

# Window background blur
blur enable
blur_xray disable
blur_passes 2
blur_radius 8

shadows disable
shadows_on_csd disable
shadow_blur_radius 20
shadow_color #0000007F

# inactive window fade amount. 0.0 = no dimming, 1.0 = fully dimmed
default_dim_inactive 0.0
dim_inactive_colors.unfocused #000000FF
dim_inactive_colors.urgent #900000FF

# Move minimized windows into Scratchpad (enable|disable)
scratchpad_minimize disable

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output DP-1 bg ~/Pictures/Backgrounds/Widescreen/destroyed-tie-fighters.jpg fill
output DP-1 mode 3440x1440@144Hz adaptive_sync off
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Toggle VRR on for fullscreen only:
exec ~/.config/sway/vrr-fullscreen.sh

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input 9610:8229:Glorious_Model_D-_Wireless {
    accel_profile "flat"
    pointer_accel -0.3
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+c kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+m exec swaynag -t warning -m ' Are you sure you want to exit sway? ' -B ' Yes, exit sway ' 'swaymsg exit'
    # bindsym $mod+m exec swaymsg exit
#
# Moving around:
#
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    bindsym $mod+h focus left
    bindsym $mod+j focus down
    bindsym $mod+k focus up
    bindsym $mod+l focus right 

    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
    
    bindsym $mod+Shift+h move left
    bindsym $mod+Shift+j move down
    bindsym $mod+Shift+k move up
    bindsym $mod+Shift+l move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+Control+Left exec "~/.config/sway/switch-workspace.py prev"
    bindsym $mod+Control+h exec "~/.config/sway/switch-workspace.py prev"
    bindsym $mod+Control+Right exec "~/.config/sway/switch-workspace.py next"
    bindsym $mod+Control+l exec "~/.config/sway/switch-workspace.py next"
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+z splith
    bindsym $mod+x splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    bindsym $mod+q layout tabbed
    bindsym $mod+w layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+Control+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Audio:
#
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous
bindsym XF86Search exec bemenu-run

#
# Misc:
#
bindsym $mod+p exec swaylock
bindsym $mod+v exec "cliphist-rofi-image.sh | rofi -dmenu -display-columns 2 -show-icons -theme cliphist.rasi | cliphist decode | wl-copy"
bindsym $mod+s exec "~/.config/sway/screenshot.py copy screen"
bindsym $mod+Control+s exec "~/.config/sway/screenshot.py copysave screen"
bindsym $mod+Shift+s exec "~/.config/sway/screenshot.py copy region"
bindsym $mod+Shift+Control+s exec "~/.config/sway/screenshot.py copysave region"

### Window rules
#
for_window [class=".*"] opacity $opacity
for_window [app_id=".*"] opacity $opacity
for_window [app_id="org.kde.dolphin" title="Moving — Dolphin"] floating enable
for_window [app_id="org.kde.dolphin" title="Copying — Dolphin"] floating enable

### Startup
#
# Waybar:
#
exec "mkdir /tmp/waybar"
exec waybar
exec swaync
exec "nm-applet --indicator"
exec "sleep 2; insync start"
#
# Other stuff:
#
exec "wl-paste --type text --watch cliphist store"
exec "wl-paste --type image --watch cliphist store"
exec /usr/lib/polkit-kde-authentication-agent-1
exec kwalletd6

